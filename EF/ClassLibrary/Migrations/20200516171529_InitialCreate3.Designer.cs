// <auto-generated />
using ClassLibrary.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary.Migrations
{
    [DbContext(typeof(EFoefContext))]
    [Migration("20200516171529_InitialCreate3")]
    partial class InitialCreate3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary.Speler", b =>
                {
                    b.Property<int>("SpelerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<int>("Rugnummer")
                        .HasColumnType("int");

                    b.Property<double>("Waarde")
                        .HasColumnType("float");

                    b.Property<int>("_TeamID")
                        .HasColumnType("int");

                    b.HasKey("SpelerID");

                    b.HasIndex("_TeamID");

                    b.ToTable("Spelers");
                });

            modelBuilder.Entity("ClassLibrary.Team", b =>
                {
                    b.Property<int>("Stamnummer")
                        .HasColumnType("int");

                    b.Property<string>("Bijnaam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)")
                        .HasMaxLength(64);

                    b.Property<string>("Trainer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Stamnummer");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("ClassLibrary.Transfer", b =>
                {
                    b.Property<int>("TransferID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TeamIDONieuw")
                        .HasColumnType("int");

                    b.Property<int>("TeamIDOud")
                        .HasColumnType("int");

                    b.Property<double>("Transferprijs")
                        .HasColumnType("float");

                    b.Property<int>("_spelerID")
                        .HasColumnType("int");

                    b.HasKey("TransferID");

                    b.HasIndex("TeamIDONieuw")
                        .IsUnique();

                    b.HasIndex("TeamIDOud")
                        .IsUnique();

                    b.HasIndex("_spelerID")
                        .IsUnique();

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("ClassLibrary.Speler", b =>
                {
                    b.HasOne("ClassLibrary.Team", "_Team")
                        .WithMany("_spelers")
                        .HasForeignKey("_TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClassLibrary.Transfer", b =>
                {
                    b.HasOne("ClassLibrary.Team", "NieuweClub")
                        .WithOne()
                        .HasForeignKey("ClassLibrary.Transfer", "TeamIDONieuw")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Team", "OudeClub")
                        .WithOne()
                        .HasForeignKey("ClassLibrary.Transfer", "TeamIDOud")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ClassLibrary.Speler", "_speler")
                        .WithOne()
                        .HasForeignKey("ClassLibrary.Transfer", "_spelerID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
